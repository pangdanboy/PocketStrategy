{"ast":null,"code":"import router from './../router/index';\nexport default {\n  name: 'EditEmail',\n  data: function () {\n    return {\n      email: '',\n      code: '',\n      codeTime: 60,\n      // 定时器\n      timer: null,\n      // 验证码失效定时器\n      codeTimer: null,\n      verifyCode: '',\n      emailClass: '',\n      codeClass: '',\n      emailErrorShow: false,\n      codeErrorShow: false,\n      codeError: false\n    };\n  },\n  methods: {\n    hidden() {\n      // 调用父组件方法隐藏修改邮件框\n      this.$emit('hiddenEditEmail');\n    },\n\n    checkEmail() {\n      console.log('email失去焦点');\n      const emailExp = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n\n      if (this.email.length === 0 || !emailExp.test(this.email)) {\n        // 提示错误\n        this.emailErrorShow = true; // 边框提示错误\n\n        this.emailClass = 'error';\n      } else {\n        this.emailErrorShow = false;\n        this.emailClass = '';\n      }\n    },\n\n    checkVerifyCode() {\n      console.log('verifyCode失去焦点');\n\n      if (this.verifyCode.length === 0) {\n        this.codeErrorShow = true;\n        this.codeClass = 'error';\n      } else {\n        this.codeErrorShow = false;\n        this.codeClass = '';\n      }\n    },\n\n    getCode() {\n      if (this.email.length !== 0 && !this.emailErrorShow) {\n        this.$axios.get('verifyCode/verify?email=' + this.email).then(res => {\n          if (res.data.code === 404) {\n            this.$message({\n              message: '邮箱不存在',\n              type: 'warning'\n            });\n          } else {\n            console.log(res.data);\n            this.code = res.data.verifyCode;\n            this.$message({\n              message: '发送成功',\n              type: 'success'\n            });\n            this.codeTimer = setTimeout(() => {\n              this.code = '';\n              console.log('验证码失效');\n            }, 60000);\n            this.timer = setInterval(() => {\n              this.$refs.codeBtn.innerText = this.codeTime + '秒';\n              this.codeTime--;\n              console.log('定时器');\n\n              if (this.codeTime === 0) {\n                clearInterval(this.timer);\n                this.codeTime = 60;\n                this.$refs.codeBtn.innerText = '重新获取';\n              }\n            }, 1000);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n\n    editEmail() {\n      if (this.verifyCode !== this.code + '') {\n        this.codeError = true;\n      } else if (!this.emailErrorShow && !this.codeErrorShow) {\n        this.$axios.put('users/editEmail', {\n          email: this.email\n        }).then(res => {\n          console.log(res.data);\n\n          if (res.data.code === 400) {\n            this.$message({\n              message: '邮箱已被绑定',\n              type: 'warning'\n            });\n          } else {\n            this.$message({\n              message: '修改成功',\n              type: 'success'\n            }); // 隐藏弹出框\n\n            this.hidden();\n            router.push('/Refresh');\n          } // 两种情况需要清除定时器，重置验证码时效，清空验证码\n\n\n          clearInterval(this.timer);\n          clearTimeout(this.codeTimer);\n          this.codeTime = 60;\n          this.code = '';\n          this.$refs.codeBtn.innerText = '获取验证码';\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAwBA;AACA;EACAA,iBADA;EAEAC;IACA;MACAC,SADA;MAEAC,QAFA;MAGAC,YAHA;MAIA;MACAC,WALA;MAMA;MACAC,eAPA;MAQAC,cARA;MASAC,cATA;MAUAC,aAVA;MAWAC,qBAXA;MAYAC,oBAZA;MAaAC;IAbA;EAeA,CAlBA;EAmBAC;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACAC;MACA;;MACA;QACA;QACA,2BAFA,CAGA;;QACA;MACA,CALA,MAKA;QACA;QACA;MACA;IACA,CAjBA;;IAkBAC;MACAD;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA,CA3BA;;IA4BAE;MACA;QACA;UACA;YACA;cACAC,gBADA;cAEAC;YAFA;UAIA,CALA,MAKA;YACAJ;YACA;YACA;cACAG,eADA;cAEAC;YAFA;YAIA;cACA;cACAJ;YACA,CAHA,EAGA,KAHA;YAIA;cACA;cACA;cACAA;;cACA;gBACAK;gBACA;gBACA;cACA;YACA,CATA,EASA,IATA;UAUA;QACA,CA5BA,EA4BAC,KA5BA,CA4BAC;UACAP;QACA,CA9BA;MA+BA;IACA,CA9DA;;IA+DAQ;MACA;QACA;MACA,CAFA,MAEA;QACA;UACAtB;QADA,GAEAuB,IAFA,CAEAC;UACAV;;UACA;YACA;cACAG,iBADA;cAEAC;YAFA;UAIA,CALA,MAKA;YACA;cACAD,eADA;cAEAC;YAFA,GADA,CAKA;;YACA;YACAO;UACA,CAfA,CAgBA;;;UACAN;UACAO;UACA;UACA;UACA;QACA,CAxBA,EAwBAN,KAxBA,CAwBAC;UACAP;QACA,CA1BA;MA2BA;IACA;;EA/FA;AAnBA","names":["name","data","email","code","codeTime","timer","codeTimer","verifyCode","emailClass","codeClass","emailErrorShow","codeErrorShow","codeError","methods","hidden","checkEmail","console","checkVerifyCode","getCode","message","type","clearInterval","catch","err","editEmail","then","res","router","clearTimeout"],"sourceRoot":"src/components","sources":["EditEmail.vue"],"sourcesContent":["<template>\r\n  <div id=\"edit_email\">\r\n    <div class=\"email\" :class=\"emailClass\">\r\n      <span>邮箱:</span>\r\n      <input type=\"email\" v-model=\"email\" @blur=\"checkEmail\">\r\n      <span class=\"format-error-tips\" v-show=\"emailErrorShow\">邮箱格式错误</span>\r\n    </div>\r\n    <div class=\"verifyCode\" :class=\"codeClass\">\r\n      <span>验证码:</span>\r\n      <input type=\"text\" v-model=\"verifyCode\" @blur=\"checkVerifyCode\">\r\n      <button @click.prevent=\"getCode\" ref=\"codeBtn\" :disabled=\"code !== ''\">获取验证码</button>\r\n      <span class=\"format-error-tips\" v-show=\"codeErrorShow\">验证码不能为空</span>\r\n      <span class=\"format-error-tips\" v-show=\"codeError\">验证码错误</span>\r\n    </div>\r\n    <div class=\"submit\">\r\n      <input type=\"button\" @click.prevent=\"editEmail\" value=\"修改\">\r\n    </div>\r\n    <div class=\"cancel\" @click=\"hidden\">\r\n      <i class=\"iconfont icon-xianshi_quxiao\"></i>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport router from './../router/index'\r\nexport default {\r\n  name: 'EditEmail',\r\n  data: function () {\r\n    return {\r\n      email: '',\r\n      code: '',\r\n      codeTime: 60,\r\n      // 定时器\r\n      timer: null,\r\n      // 验证码失效定时器\r\n      codeTimer: null,\r\n      verifyCode: '',\r\n      emailClass: '',\r\n      codeClass: '',\r\n      emailErrorShow: false,\r\n      codeErrorShow: false,\r\n      codeError: false\r\n    }\r\n  },\r\n  methods: {\r\n    hidden () {\r\n      // 调用父组件方法隐藏修改邮件框\r\n      this.$emit('hiddenEditEmail')\r\n    },\r\n    checkEmail () {\r\n      console.log('email失去焦点')\r\n      const emailExp = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/\r\n      if (this.email.length === 0 || !emailExp.test(this.email)) {\r\n        // 提示错误\r\n        this.emailErrorShow = true\r\n        // 边框提示错误\r\n        this.emailClass = 'error'\r\n      } else {\r\n        this.emailErrorShow = false\r\n        this.emailClass = ''\r\n      }\r\n    },\r\n    checkVerifyCode () {\r\n      console.log('verifyCode失去焦点')\r\n      if (this.verifyCode.length === 0) {\r\n        this.codeErrorShow = true\r\n        this.codeClass = 'error'\r\n      } else {\r\n        this.codeErrorShow = false\r\n        this.codeClass = ''\r\n      }\r\n    },\r\n    getCode () {\r\n      if (this.email.length !== 0 && !this.emailErrorShow) {\r\n        this.$axios.get('verifyCode/verify?email=' + this.email).then(res => {\r\n          if (res.data.code === 404) {\r\n            this.$message({\r\n              message: '邮箱不存在',\r\n              type: 'warning'\r\n            })\r\n          } else {\r\n            console.log(res.data)\r\n            this.code = res.data.verifyCode\r\n            this.$message({\r\n              message: '发送成功',\r\n              type: 'success'\r\n            })\r\n            this.codeTimer = setTimeout(() => {\r\n              this.code = ''\r\n              console.log('验证码失效')\r\n            }, 60000)\r\n            this.timer = setInterval(() => {\r\n              this.$refs.codeBtn.innerText = this.codeTime + '秒'\r\n              this.codeTime--\r\n              console.log('定时器')\r\n              if (this.codeTime === 0) {\r\n                clearInterval(this.timer)\r\n                this.codeTime = 60\r\n                this.$refs.codeBtn.innerText = '重新获取'\r\n              }\r\n            }, 1000)\r\n          }\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n    editEmail () {\r\n      if (this.verifyCode !== this.code + '') {\r\n        this.codeError = true\r\n      } else if (!this.emailErrorShow && !this.codeErrorShow) {\r\n        this.$axios.put('users/editEmail', {\r\n          email: this.email\r\n        }).then(res => {\r\n          console.log(res.data)\r\n          if (res.data.code === 400) {\r\n            this.$message({\r\n              message: '邮箱已被绑定',\r\n              type: 'warning'\r\n            })\r\n          } else {\r\n            this.$message({\r\n              message: '修改成功',\r\n              type: 'success'\r\n            })\r\n            // 隐藏弹出框\r\n            this.hidden()\r\n            router.push('/Refresh')\r\n          }\r\n          // 两种情况需要清除定时器，重置验证码时效，清空验证码\r\n          clearInterval(this.timer)\r\n          clearTimeout(this.codeTimer)\r\n          this.codeTime = 60\r\n          this.code = ''\r\n          this.$refs.codeBtn.innerText = '获取验证码'\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  #edit_email{\r\n    width: 400px;\r\n    height: 280px;\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    padding-top: 50px;\r\n    div{\r\n      width: 350px;\r\n      height: 70px;\r\n      margin-bottom: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-end;\r\n      position: relative;\r\n      &.error{\r\n        input{\r\n          border: 1px solid red !important;\r\n        }\r\n      }\r\n      span{\r\n        margin-right: 5px;\r\n        font-size: 18px;\r\n      }\r\n      .format-error-tips{\r\n        position: absolute;\r\n        bottom: -5px;\r\n        left: 80px;\r\n        font-size: 14px;\r\n        color: red;\r\n      }\r\n      input{\r\n        width: 250px;\r\n        height: 35px;\r\n        border: none;\r\n        outline: none;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        border-radius: 5px;\r\n        margin-right: 20px;\r\n      }\r\n      input[type=button]{\r\n        cursor: pointer;\r\n      }\r\n    }\r\n    .verifyCode{\r\n      input{\r\n        width: 150px;\r\n        height: 35px;\r\n        border: none;\r\n        outline: none;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        border-radius: 5px;\r\n        margin-right: 10px;\r\n      }\r\n      button{\r\n        height: 35px;\r\n        width: 80px;\r\n        border: none;\r\n        margin-right: 20px;\r\n        margin-left: 10px;\r\n        cursor: pointer;\r\n        background-color: rgba(240, 240, 240);\r\n        border-radius: 5px;\r\n      }\r\n    }\r\n    .cancel{\r\n      width: 20px;\r\n      height: 20px;\r\n      position: fixed;\r\n      top: 2px;\r\n      right: 2px;\r\n      margin: 0;\r\n      cursor: pointer;\r\n      i{\r\n        font-size: 20px;\r\n      }\r\n    }\r\n  }\r\n  </style>\r\n"]},"metadata":{},"sourceType":"module"}