{"ast":null,"code":"export default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Register',\n  data: function () {\n    return {\n      // 邮箱\n      email: '',\n      // 密码\n      password: '',\n      // 用户输入验证码\n      verifyCode: '',\n      // 获取验证码\n      code: '',\n      // 验证码有效时间\n      codeTime: 60,\n      // 定时器\n      timer: null,\n      // 验证码失效定时器\n      codeTimer: null,\n      // 验证错误\n      errorShow: false,\n      // 邮箱格式错误\n      emailErrorShow: false,\n      // 密码格式错误\n      passwordErrorShow: false,\n      // 验证码格式错误\n      codeErrorShow: false,\n      // 验证码验证错误\n      codeError: false,\n      // 提示样式类名\n      emailClass: '',\n      passwordClass: '',\n      codeClass: ''\n    };\n  },\n  computed: {},\n  methods: {\n    hidden() {\n      // 点击取消按钮调用父组件传递方法，隐藏注册框\n      this.$emit('hiddenRegister');\n    },\n\n    showLogin() {\n      // 隐藏注册框\n      this.hidden(); // 点击返回登录按钮调用父组件传递方法，显示登录\n\n      this.$emit('showLogin');\n    },\n\n    checkEmail() {\n      console.log('email失去焦点');\n      const emailExp = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/;\n\n      if (this.email.length === 0 || !emailExp.test(this.email)) {\n        // 提示错误\n        this.emailErrorShow = true; // 边框提示错误\n\n        this.emailClass = 'error';\n      } else {\n        this.emailErrorShow = false;\n        this.emailClass = '';\n      }\n    },\n\n    checkPassword() {\n      console.log('password失去焦点');\n\n      if (this.password.length === 0) {\n        this.passwordErrorShow = true;\n        this.passwordClass = 'error';\n      } else {\n        this.passwordErrorShow = false;\n        this.passwordClass = '';\n      }\n    },\n\n    checkVerifyCode() {\n      console.log('verifyCode失去焦点');\n\n      if (this.verifyCode.length === 0) {\n        this.codeErrorShow = true;\n        this.codeClass = 'error';\n      } else {\n        this.codeErrorShow = false;\n        this.codeClass = '';\n      }\n    },\n\n    getCode() {\n      if (this.email.length !== 0 && !this.emailErrorShow) {\n        this.$axios.get('verifyCode/verify?email=' + this.email).then(res => {\n          if (res.data.code === 404) {\n            this.$message({\n              message: '邮箱不存在',\n              type: 'warning'\n            });\n          } else {\n            console.log(res.data);\n            this.code = res.data.verifyCode;\n            this.$message({\n              message: '发送成功',\n              type: 'success'\n            });\n            this.codeTimer = setTimeout(() => {\n              this.code = '';\n              console.log('验证码失效');\n            }, 60000);\n            this.timer = setInterval(() => {\n              this.$refs.codeBtn.innerText = this.codeTime + '秒';\n              this.codeTime--;\n              console.log('定时器');\n\n              if (this.codeTime === 0) {\n                clearInterval(this.timer);\n                this.codeTime = 60;\n                this.$refs.codeBtn.innerText = '重新获取';\n              }\n            }, 1000);\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n\n    register() {\n      console.log('点击了注册');\n      console.log(this.code); // 判断验证码\n\n      if (this.verifyCode !== this.code + '') {\n        this.codeError = true;\n      } else if (!this.emailErrorShow && !this.passwordErrorShow) {\n        console.log('发送请求');\n        this.$axios.post('users/register', {\n          name: this.username,\n          email: this.email,\n          password: this.password\n        }).then(res => {\n          console.log(res.data);\n\n          if (res.data.code === 400) {\n            this.$message({\n              message: '该邮箱已被注册！',\n              type: 'warning'\n            });\n          } else {\n            this.openSuccess();\n          } // 两种情况都需要清除定时器，重置验证码时效，清空验证码\n\n\n          clearInterval(this.timer);\n          clearTimeout(this.codeTimer);\n          this.codeTime = 60;\n          this.code = '';\n          this.$refs.codeBtn.innerText = '获取验证码';\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n\n    openSuccess() {\n      this.$message({\n        message: '注册成功！请返回登录',\n        type: 'success'\n      }); // 返回登录\n\n      this.showLogin(); // 清空表单数据\n\n      this.$refs.form.reset();\n    }\n\n  },\n  watch: {\n    // 控制email的长度\n    email: function (newValue, oldValue) {\n      if (newValue.length >= 64) {\n        this.email = oldValue;\n      }\n    },\n    // 控制password的长度\n    password: function (newValue, oldValue) {\n      if (newValue.length >= 16) {\n        this.password = oldValue;\n      }\n    },\n    // 控制username的长度\n    username: function (newValue, oldValue) {\n      if (newValue.length >= 16) {\n        this.username = oldValue;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAmCA;EACA;EACAA,gBAFA;EAGAC;IACA;MACA;MACAC,SAFA;MAGA;MACAC,YAJA;MAKA;MACAC,cANA;MAOA;MACAC,QARA;MASA;MACAC,YAVA;MAWA;MACAC,WAZA;MAaA;MACAC,eAdA;MAeA;MACAC,gBAhBA;MAiBA;MACAC,qBAlBA;MAmBA;MACAC,wBApBA;MAqBA;MACAC,oBAtBA;MAuBA;MACAC,gBAxBA;MAyBA;MACAC,cA1BA;MA2BAC,iBA3BA;MA4BAC;IA5BA;EA8BA,CAlCA;EAmCAC,YAnCA;EAqCAC;IACAC;MACA;MACA;IACA,CAJA;;IAKAC;MACA;MACA,cAFA,CAGA;;MACA;IACA,CAVA;;IAWAC;MACAC;MACA;;MACA;QACA;QACA,2BAFA,CAGA;;QACA;MACA,CALA,MAKA;QACA;QACA;MACA;IACA,CAvBA;;IAwBAC;MACAD;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA,CAjCA;;IAkCAE;MACAF;;MACA;QACA;QACA;MACA,CAHA,MAGA;QACA;QACA;MACA;IACA,CA3CA;;IA4CAG;MACA;QACA;UACA;YACA;cACAC,gBADA;cAEAC;YAFA;UAIA,CALA,MAKA;YACAL;YACA;YACA;cACAI,eADA;cAEAC;YAFA;YAIA;cACA;cACAL;YACA,CAHA,EAGA,KAHA;YAIA;cACA;cACA;cACAA;;cACA;gBACAM;gBACA;gBACA;cACA;YACA,CATA,EASA,IATA;UAUA;QACA,CA5BA,EA4BAC,KA5BA,CA4BAC;UACAR;QACA,CA9BA;MA+BA;IACA,CA9EA;;IA+EAS;MACAT;MACAA,uBAFA,CAGA;;MACA;QACA;MACA,CAFA,MAEA;QACAA;QACA;UACAtB,mBADA;UAEAE,iBAFA;UAGAC;QAHA,GAIA6B,IAJA,CAIAC;UACAX;;UACA;YACA;cACAI,mBADA;cAEAC;YAFA;UAIA,CALA,MAKA;YACA;UACA,CATA,CAUA;;;UACAC;UACAM;UACA;UACA;UACA;QACA,CApBA,EAoBAL,KApBA,CAoBAC;UACAR;QACA,CAtBA;MAuBA;IACA,CA/GA;;IAgHAa;MACA;QACAT,qBADA;QAEAC;MAFA,GADA,CAKA;;MACA,iBANA,CAOA;;MACA;IACA;;EAzHA,CArCA;EAgKAS;IACA;IACAlC;MACA;QACA;MACA;IACA,CANA;IAOA;IACAC;MACA;QACA;MACA;IACA,CAZA;IAaA;IACAkC;MACA;QACA;MACA;IACA;EAlBA;AAhKA","names":["name","data","email","password","verifyCode","code","codeTime","timer","codeTimer","errorShow","emailErrorShow","passwordErrorShow","codeErrorShow","codeError","emailClass","passwordClass","codeClass","computed","methods","hidden","showLogin","checkEmail","console","checkPassword","checkVerifyCode","getCode","message","type","clearInterval","catch","err","register","then","res","clearTimeout","openSuccess","watch","username"],"sourceRoot":"src/components","sources":["Register.vue"],"sourcesContent":["<template>\r\n  <div id=\"register\">\r\n    <form ref=\"form\">\r\n      <div class=\"email\" :class=\"emailClass\">\r\n        <span>邮箱:</span>\r\n        <input type=\"email\" v-model=\"email\" @blur=\"checkEmail\">\r\n        <span class=\"format-error-tips\" v-show=\"emailErrorShow\">邮箱格式错误</span>\r\n      </div>\r\n      <div class=\"verifyCode\" :class=\"codeClass\">\r\n        <span>验证码:</span>\r\n        <input type=\"text\" v-model=\"verifyCode\" @blur=\"checkVerifyCode\">\r\n        <button @click.prevent=\"getCode\" ref=\"codeBtn\" :disabled=\"code !== ''\">获取验证码</button>\r\n        <span class=\"format-error-tips\" v-show=\"codeErrorShow\">验证码不能为空</span>\r\n        <span class=\"format-error-tips\" v-show=\"codeError\">验证码错误</span>\r\n      </div>\r\n      <div class=\"password\" :class=\"passwordClass\">\r\n        <span>密码:</span>\r\n        <input type=\"password\" v-model=\"password\" @blur=\"checkPassword\">\r\n        <span class=\"format-error-tips\" v-show=\"passwordErrorShow\">密码不能为空</span>\r\n      </div>\r\n      <div class=\"submit\">\r\n        <input type=\"submit\" @click.prevent=\"register\" value=\"注册\" ref=\"submit\">\r\n      </div>\r\n      <div class=\"cancel\" @click=\"hidden\">\r\n        <i class=\"iconfont icon-xianshi_quxiao\"></i>\r\n      </div>\r\n      <div class=\"jumpLogin\">\r\n        <span>已有账号?</span>\r\n        <span class=\"clickLogin\" @click=\"showLogin\">返回登录</span>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: 'Register',\r\n  data: function () {\r\n    return {\r\n      // 邮箱\r\n      email: '',\r\n      // 密码\r\n      password: '',\r\n      // 用户输入验证码\r\n      verifyCode: '',\r\n      // 获取验证码\r\n      code: '',\r\n      // 验证码有效时间\r\n      codeTime: 60,\r\n      // 定时器\r\n      timer: null,\r\n      // 验证码失效定时器\r\n      codeTimer: null,\r\n      // 验证错误\r\n      errorShow: false,\r\n      // 邮箱格式错误\r\n      emailErrorShow: false,\r\n      // 密码格式错误\r\n      passwordErrorShow: false,\r\n      // 验证码格式错误\r\n      codeErrorShow: false,\r\n      // 验证码验证错误\r\n      codeError: false,\r\n      // 提示样式类名\r\n      emailClass: '',\r\n      passwordClass: '',\r\n      codeClass: ''\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  methods: {\r\n    hidden () {\r\n      // 点击取消按钮调用父组件传递方法，隐藏注册框\r\n      this.$emit('hiddenRegister')\r\n    },\r\n    showLogin () {\r\n      // 隐藏注册框\r\n      this.hidden()\r\n      // 点击返回登录按钮调用父组件传递方法，显示登录\r\n      this.$emit('showLogin')\r\n    },\r\n    checkEmail () {\r\n      console.log('email失去焦点')\r\n      const emailExp = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*\\.[a-zA-Z0-9]{2,6}$/\r\n      if (this.email.length === 0 || !emailExp.test(this.email)) {\r\n        // 提示错误\r\n        this.emailErrorShow = true\r\n        // 边框提示错误\r\n        this.emailClass = 'error'\r\n      } else {\r\n        this.emailErrorShow = false\r\n        this.emailClass = ''\r\n      }\r\n    },\r\n    checkPassword () {\r\n      console.log('password失去焦点')\r\n      if (this.password.length === 0) {\r\n        this.passwordErrorShow = true\r\n        this.passwordClass = 'error'\r\n      } else {\r\n        this.passwordErrorShow = false\r\n        this.passwordClass = ''\r\n      }\r\n    },\r\n    checkVerifyCode () {\r\n      console.log('verifyCode失去焦点')\r\n      if (this.verifyCode.length === 0) {\r\n        this.codeErrorShow = true\r\n        this.codeClass = 'error'\r\n      } else {\r\n        this.codeErrorShow = false\r\n        this.codeClass = ''\r\n      }\r\n    },\r\n    getCode () {\r\n      if (this.email.length !== 0 && !this.emailErrorShow) {\r\n        this.$axios.get('verifyCode/verify?email=' + this.email).then(res => {\r\n          if (res.data.code === 404) {\r\n            this.$message({\r\n              message: '邮箱不存在',\r\n              type: 'warning'\r\n            })\r\n          } else {\r\n            console.log(res.data)\r\n            this.code = res.data.verifyCode\r\n            this.$message({\r\n              message: '发送成功',\r\n              type: 'success'\r\n            })\r\n            this.codeTimer = setTimeout(() => {\r\n              this.code = ''\r\n              console.log('验证码失效')\r\n            }, 60000)\r\n            this.timer = setInterval(() => {\r\n              this.$refs.codeBtn.innerText = this.codeTime + '秒'\r\n              this.codeTime--\r\n              console.log('定时器')\r\n              if (this.codeTime === 0) {\r\n                clearInterval(this.timer)\r\n                this.codeTime = 60\r\n                this.$refs.codeBtn.innerText = '重新获取'\r\n              }\r\n            }, 1000)\r\n          }\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n    register () {\r\n      console.log('点击了注册')\r\n      console.log(this.code)\r\n      // 判断验证码\r\n      if (this.verifyCode !== this.code + '') {\r\n        this.codeError = true\r\n      } else if (!this.emailErrorShow && !this.passwordErrorShow) {\r\n        console.log('发送请求')\r\n        this.$axios.post('users/register', {\r\n          name: this.username,\r\n          email: this.email,\r\n          password: this.password\r\n        }).then((res) => {\r\n          console.log(res.data)\r\n          if (res.data.code === 400) {\r\n            this.$message({\r\n              message: '该邮箱已被注册！',\r\n              type: 'warning'\r\n            })\r\n          } else {\r\n            this.openSuccess()\r\n          }\r\n          // 两种情况都需要清除定时器，重置验证码时效，清空验证码\r\n          clearInterval(this.timer)\r\n          clearTimeout(this.codeTimer)\r\n          this.codeTime = 60\r\n          this.code = ''\r\n          this.$refs.codeBtn.innerText = '获取验证码'\r\n        }).catch((err) => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n    openSuccess () {\r\n      this.$message({\r\n        message: '注册成功！请返回登录',\r\n        type: 'success'\r\n      })\r\n      // 返回登录\r\n      this.showLogin()\r\n      // 清空表单数据\r\n      this.$refs.form.reset()\r\n    }\r\n  },\r\n  watch: {\r\n    // 控制email的长度\r\n    email: function (newValue, oldValue) {\r\n      if (newValue.length >= 64) {\r\n        this.email = oldValue\r\n      }\r\n    },\r\n    // 控制password的长度\r\n    password: function (newValue, oldValue) {\r\n      if (newValue.length >= 16) {\r\n        this.password = oldValue\r\n      }\r\n    },\r\n    // 控制username的长度\r\n    username: function (newValue, oldValue) {\r\n      if (newValue.length >= 16) {\r\n        this.username = oldValue\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  #register{\r\n  width: 500px;\r\n  height: 400px;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  form{\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    padding-top: 20px;\r\n    div{\r\n      width: 430px;\r\n      height: 70px;\r\n      margin-bottom: 20px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-end;\r\n      position: relative;\r\n      &.error{\r\n        input{\r\n          border: 1px solid red !important;\r\n        }\r\n      }\r\n      span{\r\n        margin-right: 5px;\r\n        font-size: 18px;\r\n      }\r\n      .format-error-tips{\r\n        position: absolute;\r\n        bottom: -5px;\r\n        left: 110px;\r\n        font-size: 14px;\r\n        color: red;\r\n      }\r\n      input[type=password],input[type=email]{\r\n        width: 300px;\r\n        height: 35px;\r\n        border: none;\r\n        outline: none;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        border-radius: 5px;\r\n        margin-right: 20px;\r\n      }\r\n      input[type=submit]{\r\n        width: 300px;\r\n        height: 35px;\r\n        border: none;\r\n        cursor: pointer;\r\n        border-radius: 5px;\r\n        margin-right: 20px;\r\n      }\r\n    }\r\n    .verifyCode{\r\n      input{\r\n        width: 180px;\r\n        height: 35px;\r\n        border: none;\r\n        outline: none;\r\n        padding: 5px;\r\n        box-sizing: border-box;\r\n        border-radius: 5px;\r\n      }\r\n      button{\r\n        height: 35px;\r\n        width: 80px;\r\n        border: none;\r\n        margin-right: 20px;\r\n        margin-left: 40px;\r\n        cursor: pointer;\r\n        background-color: rgba(240, 240, 240);\r\n        border-radius: 5px;\r\n      }\r\n    }\r\n    .cancel{\r\n      width: 20px;\r\n      height: 20px;\r\n      position: fixed;\r\n      top: 2px;\r\n      right: 2px;\r\n      margin: 0;\r\n      cursor: pointer;\r\n      i{\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    .jumpLogin{\r\n      width: 150px;\r\n      height: 20px;\r\n      position: fixed;\r\n      bottom: 10px;\r\n      left: 30px;\r\n      span{\r\n        font-size: 14px;\r\n      }\r\n      .clickLogin{\r\n        cursor: pointer;\r\n        color: rgb(171, 84, 90);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}